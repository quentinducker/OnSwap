{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red31\green31\blue36;\red208\green168\blue255;
\red161\green103\blue230;\red103\green183\blue164;\red252\green95\blue163;\red208\green168\blue255;\red208\green191\blue105;
\red161\green103\blue230;\red252\green106\blue93;\red103\green183\blue164;\red158\green241\blue221;\red65\green161\blue192;
\red108\green121\blue134;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c100000\c85000;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c81681\c65692\c99927;
\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c40538\c71705\c64209;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c81569\c65882\c100000;\csgenericrgb\c81498\c74939\c41233;
\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c40392\c71765\c64314;\csgenericrgb\c61961\c94510\c86667;\csgenericrgb\c25490\c63137\c75294;
\csgenericrgb\c42394\c47462\c52518;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab642
\pard\tx642\pardeftab642\partightenfactor0

\f0\fs26 \cf2 \cb3   \
        \cf4 NavigationStack\cf2 (\cf5 path\cf2 : \cf6 $path\cf2 ) \{\
            
\f1\b \cf7 if
\f0\b0 \cf2  
\f1\b \cf7 let
\f0\b0 \cf2  imageData, 
\f1\b \cf7 let
\f0\b0 \cf2  uiImage = \cf8 UIImage\cf2 (\cf5 data\cf2 : imageData) \{\
                \cf4 Image\cf2 (\cf5 uiImage\cf2 : uiImage)\
                    .\cf5 resizable\cf2 ()\
                    .\cf5 scaledToFill\cf2 ()\
                    .\cf5 frame\cf2 (\cf5 maxWidth\cf2 : \cf9 50\cf2  ,\cf5 maxHeight\cf2 : \cf9 50\cf2 )\
            \}\
            \cf4 PhotosPicker\cf2  (\cf5 selection\cf2 : \cf6 $selectedImage\cf2 ,\
                          \cf5 matching\cf2 : .\cf10 images\cf2 ,\
                          \cf5 photoLibrary\cf2 : .\cf5 shared\cf2 () ) \{\
                \cf4 Label\cf2 (\cf11 "Add Image for user1"\cf2 , \cf5 systemImage\cf2 : \cf11 "photo"\cf2 )\
            \}\
            \
            \cf4 List\cf2  \{\
                \cf4 ForEach\cf2 (\cf6 users\cf2 ) \{ user 
\f1\b \cf7 in
\f0\b0 \cf2 \
                    \cf4 NavigationLink\cf2 (\cf5 value\cf2 : user )\{\
                    \} \cf10 label\cf2 : \{\
                        \cf4 Text\cf2 (user.username)\
\
                    \}\
                \}\
                .\cf5 onDelete\cf2 (\cf5 perform\cf2 : \cf12 deleteDestinations\cf2 )\
            \}\
            .\cf5 navigationTitle\cf2 (\cf11 "OnTrade"\cf2 )\
            .\cf5 navigationDestination\cf2 (\cf5 for\cf2 : \cf13 User\cf2 .
\f1\b \cf7 self
\f0\b0 \cf2 ) \{  \}\
            .\cf5 toolbar\cf2  \{\
                \cf4 Button\cf2 (\cf11 "Add sample data"\cf2 , \cf5 action\cf2 : \cf12 addProducts\cf2 )\
                \cf4 Button\cf2 (\cf11 "Add user"\cf2 , \cf5 systemImage\cf2 : \cf11 "plus"\cf2 , \cf5 action\cf2 : \cf12 addUser\cf2 )\
            \}\
            .\cf5 task\cf2 (\cf5 id\cf2 : \cf6 selectedImage\cf2 ) \{\
                
\f1\b \cf7 if
\f0\b0 \cf2  
\f1\b \cf7 let
\f0\b0 \cf2  data = 
\f1\b \cf7 try
\f0\b0 \cf2 ? 
\f1\b \cf7 await
\f0\b0 \cf2  \cf6 selectedImage\cf2 ?.\cf5 loadTransferable\cf2 (\cf5 type\cf2 : \cf4 Data\cf2 .
\f1\b \cf7 self
\f0\b0 \cf2 ) \{\
                    \cf6 imageData\cf2  = data\
                \}\
            \}\
        \}\
    \}\
    \
    
\f1\b \cf7 func
\f0\b0 \cf2  \cf14 addUser\cf2  () \{\
        
\f1\b \cf7 let
\f0\b0 \cf2  user = \cf13 User\cf2 (\cf12 username\cf2 : \cf11 ""\cf2 , \cf12 password\cf2 : \cf11 ""\cf2 , \cf12 rating\cf2 : 
\f1\b \cf7 nil
\f0\b0 \cf2 , \cf12 profilePicture\cf2 : \cf4 Data\cf2 ())\
        \cf6 context\cf2 .\cf5 insert\cf2 (user)\
        \cf6 path\cf2  = [user]\
    \}\
    
\f1\b \cf7 func
\f0\b0 \cf2  \cf14 deleteDestinations\cf2 (\cf14 _\cf2  indexSet: \cf4 IndexSet\cf2 )\{\
        
\f1\b \cf7 for
\f0\b0 \cf2  index 
\f1\b \cf7 in
\f0\b0 \cf2  indexSet\{\
            
\f1\b \cf7 let
\f0\b0 \cf2  user = \cf6 users\cf2 [index]\
            \cf6 context\cf2 .\cf5 delete\cf2 (user)\
        \}\
    \}\
    
\f1\b \cf7 func
\f0\b0 \cf2  \cf14 addSamples\cf2 () \{\
\cf15 //        guard let imageData = imageData else \{\cf2 \
\cf15 //            print("Select an image")\cf2 \
\cf15 //            return\cf2 \
\cf15 //        \}\cf2 \
        \
\cf15 //        var user1 = User(username: "quentin_ducker", password: "password", rating: 5, profilePicture: imageData)\cf2 \
\cf15 //        var user2 = User(username: "derrick_wlodarz", password: "password", rating: 4, profilePicture: imageData)\cf2 \
\cf15 //        var user3 = User(username: "domantas_backus", password: "password", rating: 3, profilePicture: imageData)\cf2 \
\cf15 //        var user4 = User(username: "walid_halabi", password: "password", rating: 2, profilePicture: imageData)\cf2 \
\cf15 //        var user5 = User(username: "alexis_d'alessio", password: "password", rating: 1, profilePicture: imageData)\cf2 \
\cf15 //        var user6 = User(username: "rick_peck", password: "password", rating: 0, profilePicture: imageData)\cf2 \
\cf15 //        var user7 = User(username: "anthony_johnson", password: "password", rating: 1, profilePicture: imageData)\cf2 \
\cf15 //        var user8 = User(username: "daria_ahmatova", password: "password", rating: 3, profilePicture: imageData)\cf2 \
\cf15 //        var user9 = User(username: "manny_mejia", password: "password", rating: 5, profilePicture: imageData)\cf2 \
\cf15 //        var user10 = User(username: "john_membrilla", password: "password", rating: 2, profilePicture: imageData)\cf2 \
        \cf5 print\cf2 (\cf11 "adding samples"\cf2 )\
    \}\
    
\f1\b \cf7 func
\f0\b0 \cf2  \cf14 addProducts\cf2 () \{\
        
\f1\b \cf7 for
\f0\b0 \cf2  user 
\f1\b \cf7 in
\f0\b0 \cf2  \cf6 users\cf2  \{\
            \cf5 print\cf2 (user.\cf6 username\cf2 )\
        \}\
    \}\
\
\
\
\
\
\
\
\
\
\
\

\f1\b \cf7 var
\f0\b0 \cf2  \cf14 body\cf2 : 
\f1\b \cf7 some
\f0\b0 \cf2  \cf8 View\cf2  \{\
        \cf4 Form\cf2  \{\
            \cf4 TextField\cf2 (\cf11 "username"\cf2 , \cf5 text\cf2 : \cf6 $user\cf2 .\cf10 username\cf2 )\
            \cf4 TextField\cf2 (\cf11 "password"\cf2 , \cf5 text\cf2 : \cf6 $user\cf2 .\cf10 password\cf2 )\
        \}\
        \cf4 Section\cf2  \{\
            \cf4 NavigationStack\cf2  \{\
                \cf4 List\cf2 \{\
                    \cf4 ForEach\cf2 (\cf6 user\cf2 .\cf6 itemsSelling\cf2 ) \{ item 
\f1\b \cf7 in
\f0\b0 \cf2 \
                        \cf4 Text\cf2 (\cf11 "Item added with tite \cf2 \\(item.title)\cf11  "\cf2 )\
                    \}\
                    .\cf5 onDelete\cf2 ( \cf5 perform\cf2 : \cf12 deleteProduct\cf2  )\
                \}\
            \}\
        \}\
        \
        \cf4 VStack\cf2  \{\
            \cf4 TextField\cf2 (\cf11 "title"\cf2 , \cf5 text\cf2 : \cf6 $product\cf2 .\cf10 title\cf2 )\
            \cf4 TextField\cf2 (\cf11 "description"\cf2 , \cf5 text\cf2 : \cf6 $product\cf2 .\cf6 descriptionText\cf2 )\
            \cf4 TextField\cf2 (\cf11 "price"\cf2  , \cf5 value\cf2 : \cf6 $product\cf2 .\cf6 price\cf2 , \cf5 format\cf2 : .\cf10 number\cf2 )\
            \
            
\f1\b \cf7 if
\f0\b0 \cf2  
\f1\b \cf7 let
\f0\b0 \cf2  productImageData, 
\f1\b \cf7 let
\f0\b0 \cf2  uiImage = \cf8 UIImage\cf2 (\cf5 data\cf2 : productImageData) \{\
                \cf4 Image\cf2 (\cf5 uiImage\cf2 : uiImage)\
                    .\cf5 resizable\cf2 ()\
                    .\cf5 scaledToFit\cf2 ()\
            \}\
            \
            \cf4 PhotosPicker\cf2 (\cf5 selection\cf2 : \cf6 $productImage\cf2 , \cf5 matching\cf2 : .\cf10 images\cf2 ) \{\
                \cf4 Text\cf2 (\cf11 "Pick an image"\cf2 )\
            \}\
            \
            \cf4 TextField\cf2 (\cf11 "location"\cf2 , \cf5 text\cf2 : \cf6 $product\cf2 .\cf10 location\cf2 )\
            \cf4 Button\cf2 (\cf11 "add"\cf2 , \cf5 action\cf2 : \cf12 addProduct\cf2 )\
        \}\
        \
\
        \
        .\cf5 navigationTitle\cf2 (\cf11 "Edit User"\cf2 )\
        .\cf5 navigationBarTitleDisplayMode\cf2 (.\cf10 inline\cf2 )\
        .\cf5 task\cf2 (\cf5 id\cf2 : \cf6 productImage\cf2 ) \{\
            
\f1\b \cf7 if
\f0\b0 \cf2  
\f1\b \cf7 let
\f0\b0 \cf2  data = 
\f1\b \cf7 try
\f0\b0 \cf2 ? 
\f1\b \cf7 await
\f0\b0 \cf2  \cf6 productImage\cf2 ?.\cf5 loadTransferable\cf2 (\cf5 type\cf2 : \cf4 Data\cf2 .
\f1\b \cf7 self
\f0\b0 \cf2 ) \{\
                \cf6 productImageData\cf2  = data\
            \}\
        \}\
    \}\
    \
    
\f1\b \cf7 func
\f0\b0 \cf2  \cf14 deleteProduct\cf2 (\cf14 _\cf2  indexSet: \cf4 IndexSet\cf2 ) \{\
        
\f1\b \cf7 for
\f0\b0 \cf2  index 
\f1\b \cf7 in
\f0\b0 \cf2  indexSet\{\
            \cf5 print\cf2 (\cf6 user\cf2 .\cf6 itemsSelling\cf2 .\cf5 remove\cf2 (\cf5 at\cf2 : index))\
        \}\
    \}\
    
\f1\b \cf7 func
\f0\b0 \cf2  \cf14 addProduct\cf2 ()\{\
        
\f1\b \cf7 guard
\f0\b0 \cf2  \cf6 product\cf2 .\cf6 title\cf2 .\cf10 isEmpty\cf2  && \cf6 product\cf2 .\cf6 descriptionText\cf2 .\cf10 isEmpty\cf2  && \cf6 product\cf2 .\cf6 image\cf2  != \cf4 Data\cf2 ()  && \cf6 product\cf2 .\cf6 location\cf2 .\cf10 isEmpty\cf2  
\f1\b \cf7 else
\f0\b0 \cf2  \{ 
\f1\b \cf7 return
\f0\b0 \cf2  \}\
        \
        \cf5 print\cf2 (\cf11 "adding user"\cf2 )\
        \cf6 user\cf2 .\cf6 itemsSelling\cf2 .\cf5 append\cf2 (\cf6 product\cf2 )\
        \cf6 product\cf2  = \cf13 Product\cf2 ()\
    \}\
}